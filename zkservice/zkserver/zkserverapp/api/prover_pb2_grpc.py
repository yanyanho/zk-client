# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api import snark_messages_pb2 as api_dot_snark__messages__pb2
from api import zeth_messages_pb2 as api_dot_zeth__messages__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ProverStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVerificationKey = channel.unary_unary(
        '/zeth_proto.Prover/GetVerificationKey',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=api_dot_snark__messages__pb2.VerificationKey.FromString,
        )
    self.Prove = channel.unary_unary(
        '/zeth_proto.Prover/Prove',
        request_serializer=api_dot_zeth__messages__pb2.ProofInputs.SerializeToString,
        response_deserializer=api_dot_snark__messages__pb2.ExtendedProof.FromString,
        )


class ProverServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVerificationKey(self, request, context):
    """Fetch the verification key from the prover server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Prove(self, request, context):
    """Request a proof generation on the given inputs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProverServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVerificationKey': grpc.unary_unary_rpc_method_handler(
          servicer.GetVerificationKey,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=api_dot_snark__messages__pb2.VerificationKey.SerializeToString,
      ),
      'Prove': grpc.unary_unary_rpc_method_handler(
          servicer.Prove,
          request_deserializer=api_dot_zeth__messages__pb2.ProofInputs.FromString,
          response_serializer=api_dot_snark__messages__pb2.ExtendedProof.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zeth_proto.Prover', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
